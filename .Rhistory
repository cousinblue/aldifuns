les2 <- les %>%
map(print)
les2[[1]]
les2[[2]]
les2[[1]]
customFun  = function(x) {
write.csv(x, paste0("D:/Turnover Reports ",unique(x$div_name),".csv"))
return(x)
}
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(customFun(.))
#' @export
split_divs_csv <- function(x, dir_path) {
write.csv(x, paste0(dir_path, unique(x$div_name), "/", unique(x$div_name), ".csv"), row.names = FALSE, na = "")
}
getwd()
setwd("aldifuns")
document()
library(devtools)
document()
setwd("..")
install("aldifuns")
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports"))
getwd()
setwd("aldifuns")
document()
setwd("..")
install("aldifuns")
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports"))
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name)
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports"))
View(les)
document()
install("aldifuns")
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports". "Turnover Report"))
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports", "Turnover Report"))
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
create_divs("D:/Turnover Reports")
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports", "Turnover Report"))
use_package("xlsx")
install.packages("xlsx")
use_package("xlsx")
getwd()
setwd("aldifuns")
use_package("xlsx")
#' @export
split_divs_csv <- function(x, dir_path, file_name) {
temp <- filter(x, !is.na(div_name))
write.csv(temp, paste0(dir_path, "/", unique(x$div_name), "/", unique(x$div_name), " ", file_name, ".csv"), row.names = FALSE, na = "")
}
getwd()
document()
install.packages("xlsx")
document()
getwd()
setwd("..")
install.packages("aldifuns")
install.packages("aldifuns")
getwd()
document()
devtools::document()
install.packages("xlsx")
library("xlsx", lib.loc="~/R/win-library/3.4")
detach("package:xlsx", unload=TRUE)
getwd()
devtools::document()
install.packages("xlsx")
library(xlsx)
library("xlsx")
library("rJava", lib.loc="~/R/win-library/3.4")
detach("package:rJava", unload=TRUE)
document()
devtools::document()
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
create_divs("D:/Turnover Reports")
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports", "Turnover Report"))
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
create_divs("D:/Turnover Reports")
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports", "Turnover Report"))
getwd()
document()
devtools::document()
setwd("..")
install("aldifuns")
install(aldifuns)
devtools::install(aldifuns)
devtools::install("aldifuns")
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
create_divs("D:/Turnover Reports")
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports", "Turnover Report"))
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name)
temp <- filter(les, !is.na(div_name))
View(temp)
write.csv(temp, paste0(dir_path, "/", unique(temp$div_name), "/", unique(temp$div_name), " ", file_name, ".csv"), row.names = FALSE, na = "")
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
create_divs("D:/Turnover Reports")
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports", "Turnover Report"))
View(temp)
getwd()
setwd("aldifuns")
library(devtools)
document()
setwd("..")
isntall("aldifuns")
install("aldifuns")
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
create_divs("D:/Turnover Reports")
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports", "Turnover Report"))
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "integer", "character", "character"),
na.strings = "NULL")
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "integer", "character", "character"),
na.strings = "NULL")
View(emp)
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "integer", "character", "character"),
na.strings = "NULL")
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "integer", "character", "character"),
na.strings = "NULL")
View(emp)
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
create_divs("D:/Turnover Reports")
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports", "Turnover Report"))
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "integer", "character", "character"),
na.strings = "NULL")
View(emp)
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "character", "character", "character"),
na.strings = "NULL")
View(emp)
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "character", "character", "character"),
na.strings = "NULL") %>%
add_divs()
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "character", "character", "character"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee)
View(emp)
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "character", "character", "character"),
na.strings = "NULL") %>%
add_divs() %>%
div_names()
create_divs("D:/Employee Lists")
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "character", "character", "character"),
na.strings = "NULL") %>%
add_divs() %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Employee Lists", "Employee List"))
#' @export
split_divs_csv <- function(x, dir_path, file_name) {
write.csv(dplyr::select(x, -(contains("div"))),
paste0(dir_path, "/", unique(x$div_name), "/", unique(x$div_name), " ", file_name, ".csv"), row.names = FALSE, na = "")
}
getwd()
setwd("aldifuns"
)
document()
setwd("..")
install("aldifuns")
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
create_divs("D:/Employee Lists")
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "character", "character", "character"),
na.strings = "NULL") %>%
add_divs() %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Employee Lists", "Employee List"))
#' @export
split_divs_csv <- function(x, dir_path, file_name) {
write.csv(dplyr::select(x, -(contains("div"))),
paste0(dir_path, "/", unique(x$div_name), "/", unique(x$div_name), " ", file_name, ".csv"), row.names = FALSE, na = "")
}
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "character", "character", "character"),
na.strings = "NULL") %>%
add_divs() %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Employee Lists", "Employee List"))
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "character", "character", "character"),
na.strings = "NULL") %>%
add_divs() %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Employee Lists", "Employee List"))
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "character", "character", "character"),
na.strings = "NULL") %>%
add_divs() %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Employee Lists", "Employee List"))
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "character", "character", "character"),
na.strings = "NULL") %>%
add_divs() %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Employee Lists", "Employee List"))
#' @export
split_divs_csv <- function(x, dir_path, file_name) {
write.csv(x, paste0(dir_path, "/", unique(x$div_name), "/", unique(x$div_name), " ", file_name, ".csv"), row.names = FALSE, na = "")
}
getwd("")
getwd()
setwd("aldifuns")
document()
setwd("..")
install("aldifuns")
install("aldifuns")
# Data transformation
library(dplyr)
library(purrr)
library(stringr)
library(aldifuns)
create_divs("D:/Turnover Reports")
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
add_divs() %>%
arrange(div, bu, employee_id) %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Turnover Reports", "Turnover Report"))
create_divs("D:/Employee Lists")
emp <- read.csv("C:/Users/yubee/Documents/Datasets/employee.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "character", "character", "character", "character"),
na.strings = "NULL") %>%
add_divs() %>%
div_names() %>%
group_by(div_name) %>%
do(split_divs_csv(., "D:/Employee Lists", "Employee List"))
getwd()
setwd("aldifuns")
document()
library(aldifuns)
setwd("..")
install("aldifuns")
build()
setwd("aldifuns")
build()
library("aldifuns", lib.loc="~/R/win-library/3.4")
library("aldifuns", lib.loc="~/R/win-library/3.4")
# Data transformation
library(dplyr)
library(stringr)
library(magrittr)
library(lubridate)
# Import employee status dataset
les <- read.csv("C:/Users/yubee/Documents/Datasets/les.csv",
fileEncoding = "UTF-8-BOM",
stringsAsFactors = F,
colClasses = c("character", "integer", "character", "character", "Date", "Date"),
na.strings = "NULL") %>%
tbl_df() %>%
mutate(div = str_sub(bu_code, 1, 3),
end_date = if_else(is.na(end_date), Sys.Date(), end_date)) %>%
select(div, everything()) %>%
group_by(div)
